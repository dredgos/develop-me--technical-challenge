{"version":3,"sources":["components/addPlayer/AddPlayer.js","components/addPlayer/index.js","data/actions/State.js","components/playerList/PlayerList.js","components/playerList/index.js","components/gameSetup/GameSetup.js","components/header/Header.js","components/headerStyle/HeaderStyle.js","components/match/Match.js","components/match/index.js","components/allMatches/AllMatches.js","components/allMatches/index.js","components/tournamentView/TournamentView.js","components/tournamentView/index.js","components/app/App.js","components/app/index.js","reportWebVitals.js","data/Initial.js","data/Reducer.js","data/Store.js","index.js"],"names":["AddPlayer","addNewPlayer","players","startTourney","useState","input","setInput","inputError","setInputError","enoughPlayers","setEnoughPlayers","className","onSubmit","e","x","includes","preventDefault","length","Math","log2","htmlFor","required","type","id","onChange","currentTarget","value","onClick","connect","state","dispatch","data","addPlayer","prepareTournament","PlayerList","map","player","index","GameSetup","Header","class","HeaderStyle","icon","faSave","inverse","faUndo","faRedo","faWindowMinimize","faWindowMaximize","faWindowClose","Match","player1","player2","sendWinner","totalRounds","setNewChampion","matchID","winner","setWinner","confirmed","setConfirmed","p1","setP1","p2","setP2","disabled","setChampion","AllMatches","matches","newRound","champion","winners","match","TournamentView","resetTournament","tournamentStarted","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initial","round","shuffle","array","i","j","floor","random","createAllMatches","generatedMatches","totalmatches","allocated","push","reducer","action","newPlayer","startTournament","gameWinner","sortedArray","sort","a","b","makeNewRound","crownChampion","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d417197.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst AddPlayer = ({ addNewPlayer, players, startTourney }) => {\n\n    const [input, setInput] = useState(\"\");\n    const [inputError, setInputError] = useState(false);\n    let [enoughPlayers, setEnoughPlayers] = useState(false);\n\n    const powerOfTwo = (x) => {\n        return x >= 4 && Math.log2(x) % 1 === 0;\n    }\n\n    const handlePlayerName = (e) => {\n        setInput(e.currentTarget.value);\n        setInputError(false);\n    }\n\n    const handleSubmit = (e) => {\n        if (players.includes(input)) {\n            e.preventDefault()\n            setInputError(true);\n        } else {\n            e.preventDefault();\n            addNewPlayer(input);\n            setEnoughPlayers(powerOfTwo(players.length + 1));\n            setInput(\"\");             \n        }\n    }\n\n    return (\n        <>\n            <section>\n                <h2>Party Rules:</h2>\n                <p>Must have a minimum of four players</p>\n                <p>Number of players must be a power of two (4, 8, 16, 32 etc...)</p>\n            </section>\n            <form className=\"form-group\" onSubmit={handleSubmit} >\n                <label className=\"form-label\" htmlFor=\"newplayer\">Add a Player</label>\n                <input\n                    required \n                    type=\"text\" \n                    id=\"newplayer\"\n                    onChange={handlePlayerName}\n                    value={input}\n                    className=\"form-control\"\n                />\n                <button className=\"btn \">Sign Them Up</button>\n            </form>\n            {enoughPlayers ? <button className=\"btn \" onClick={startTourney}>Let the Games Begin!</button> : <p className=\"warning\">Add More Players to Continue</p>}\n            {inputError ? <p className=\"warning\">That player is already signed up</p> : null}\n        </>\n    );\n};\n\nexport default AddPlayer;\n","import { connect } from 'react-redux';\nimport { addPlayer, prepareTournament } from '../../data/actions/State';\nimport AddPlayer from './AddPlayer';\n\n\nconst mapStateToProps = (state) => {\n    return {\n       players: state.players,\n               \n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addNewPlayer: (data) => dispatch(addPlayer(data)),\n        startTourney: (data) => dispatch(prepareTournament(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlayer);\n\n","export const addPlayer = (data) => {\n    return {\n        type: \"ADDPLAYER\",\n        data: data\n    }\n}\n\nexport const prepareTournament = (data) => {\n    return {\n        type: \"STARTTOURNAMENT\",\n        data: data,\n    }\n}\n\nexport const reset = () => {\n    return {\n        type: \"RESET\"\n    }\n}\n\nexport const addWinner = (winner) => {\n    return {\n        type: \"ADDWINNER\",\n        winner: winner,\n    }\n}\n\nexport const createNewRound = () => {\n    return {\n        type: \"NEWROUND\",\n    }\n}\n\nexport const setChampion = (winner) => {\n    return {\n        type: \"SETCHAMPION\",\n        winner: winner,\n    }\n}\n","const PlayerList = ({ players, startTourney }) => {\n    return (\n        <section>\n            <h3>Current Players</h3>\n            <ol>\n                {players.map((player, index) => (\n                    <li key={index}>{player}</li>\n                ))}\n            </ol>\n        </section>\n    );\n};\n\nexport default PlayerList;","import { connect } from 'react-redux';\nimport PlayerList from './PlayerList'\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        players: state.players,       \n    }\n}\n\n\n\n\n\nexport default connect(mapStateToProps)(PlayerList);","import AddPlayer from '../addPlayer/'\nimport PlayerList from '../playerList';\n\nconst GameSetup = () => {\n    return (\n        <>\n            <AddPlayer />\n            <PlayerList />\n        </>\n    );\n};\n\nexport default GameSetup;","const Header = () => {\n    return (\n        <div class=\"wordart blues\">\n            <h1 className=\"site_header text\">Ping Pong Party</h1>\n        </div>\n    );\n};\n\nexport default Header;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faSave, faUndo, faWindowClose, faWindowMaximize, faWindowMinimize } from '@fortawesome/free-solid-svg-icons'\n\nconst HeaderStyle = () => {\n    return (\n        <>\n            <section className=\"header_bar\">\n                <div className=\"header_wrapper\">\n                    <div className=\"header_icons\">\n                        <FontAwesomeIcon icon={faSave} inverse />\n                        <FontAwesomeIcon icon={faUndo} inverse />\n                        <FontAwesomeIcon icon={faRedo} inverse /> \n                    </div>\n                    <p className=\"document_title\">Important Document.docx</p>\n                    <div className=\"header_icons\">\n                        <FontAwesomeIcon icon={faWindowMinimize} inverse />\n                        <FontAwesomeIcon icon={faWindowMaximize} inverse />\n                        <FontAwesomeIcon icon={faWindowClose} inverse />\n                    </div>\n                </div>\n                <div className=\"header_items\">\n                    <ul className=\"header_menubar\">\n                        <li className=\"header_menubar__items\">Home</li>\n                        <li className=\"header_menubar__items\">Insert</li>\n                        <li className=\"header_menubar__items\">Design</li>\n                        <li className=\"header_menubar__items\">Layout</li>\n                        <li className=\"header_menubar__items\">References</li>\n                        <li className=\"header_menubar__items\">Review</li>\n                        <li className=\"header_menubar__items\">View</li>\n                    </ul>\n                </div>\n                \n            </section>\n        </>\n    );\n};\n\nexport default HeaderStyle;","import { useState } from 'react'\n\n\nconst Match = ({ player1, player2, sendWinner, totalRounds, setNewChampion, matchID }) => {\n\n   const [winner, setWinner] = useState(\"\");\n   const [confirmed, setConfirmed] = useState(false);\n   const [p1, setP1] = useState(false);\n   const [p2, setP2] = useState(false);\n\n    const handleClick1 = () => {\n        setWinner(player1);\n        setP1(true);\n        setP2(false);\n    }\n\n    const handleClick2 = () => {\n        setWinner(player2);\n        setP1(false);\n        setP2(true);\n    }\n\n    const handleConfirm = () => {\n        setConfirmed(true)\n        sendWinner(data)\n    }\n    const handleChampion = () => {\n        setNewChampion(winner)\n    }\n\n    let data = {\n        winner: winner,\n        id: matchID + 1\n    }\n\n\n\n    return (\n        <section className=\"individual_matches\">\n            <div className=\"table\">\n                <div className=\"table__section table__section__a\"></div>\n                <div className=\"table__section table__section__b\"></div>\n                <div className=\"table__section table__section__a\"></div>\n                <div className=\"table__section table__section__b\"></div>\n            </div>\n            {!confirmed ? \n            <div>\n                <button className={p1 ? \"btn btn-success button\" : \" btn btn-secondary button\"} value={player1} onClick={handleClick1}>{player1}</button>\n                <button className={p2 ? \"btn btn-success button\" : \" btn btn-secondary button\"} value={player2} onClick={handleClick2}>{player2}</button>\n            </div> : \n            <div className=\"buttons\">\n                <button className={p1 ? \"btn btn-success button\" : \" btn btn-secondary button\"} value={player1} disabled>{player1}</button>\n                <button className={p2 ? \"btn btn-success button\" : \" btn btn-secondary button\"} value={player2} disabled>{player2}</button>\n            </div>}\n            \n            {totalRounds === 1 ? <button className=\"btn\" onClick={handleChampion}>Crown the Champion</button> : \n                winner === \"\" ? <button className=\"btn\" disabled>Pick a Winner</button> : \n                    confirmed ? <button className=\"btn btn-success\" disabled>{winner} wins!</button> : \n                        <button className=\"btn btn-success\" onClick={handleConfirm}>Lock in Winner</button>}           \n        </section>\n\n    );\n};\n\nexport default Match;","import { connect } from 'react-redux';\nimport Match from './Match'\nimport { addWinner, setChampion } from '../../data/actions/State'\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n       totalRounds: state.totalRounds,\n            \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sendWinner: (data) => dispatch(addWinner(data)),\n        setNewChampion: (winner) => dispatch(setChampion(winner))\n    }\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Match);","import Match from \"../match/\";\n\nconst AllMatches = ({ matches, newRound, champion, players, winners, totalRounds }) => {\n\n    \n    return (\n        champion === \"\" ? \n        <>\n            <div className={totalRounds === 1 ? \"match_display_single\" : \"match_display\"}>                \n                {matches.map((match) => (\n                    <div className=\"single_match\">\n                        <h2>Table {match.matchID + 1}</h2>\n                        <Match \n                            key={`${match.player1}V${match.player2}`} \n                            matchID={match.matchID} \n                            player1={match.player1} \n                            player2={match.player2}\n                        />\n                    </div>\n                ))}\n            </div>\n            <div>\n            {players.length === 2 ? null : \n                players.length / 2 === winners.length ? <div className=\"button-position\"><button className=\"btn btn-success\" onClick={newRound}>Next Round</button></div> : \n                    <p className=\"lockin\">Lock in all games to proceed</p>}</div>\n        </> : \n        <div>\n            <div class=\"pyro\">\n                <div class=\"before\"></div>\n                <div class=\"after\"></div>\n            </div>\n            <div className=\"champion\">\n                <p className=\"blink\">Tournament Champion is {champion}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default AllMatches;","import { connect } from 'react-redux';\nimport AllMatches from './AllMatches'\nimport { createNewRound } from '../../data/actions/State'\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n       matches: state.matches,\n       champion: state.champion,\n       players: state.players,\n       winners: state.winners,\n       totalRounds: state.totalRounds,        \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        newRound: () => dispatch(createNewRound())        \n    }\n}\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllMatches);","import AllMatches from \"../allMatches/\";\n\nconst TournamentView = ({ resetTournament }) => {\n    return (\n        <>\n            <AllMatches />\n            <div className=\"button-position\">\n                <button className=\"btn btn-danger\" onClick={resetTournament}>Start Again</button>\n            </div>\n        </>\n    );\n};\n\nexport default TournamentView;","import { connect } from 'react-redux';\nimport { reset } from '../../data/actions/State';\nimport TournamentView from './TournamentView';\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tournamentStarted: state.tournamentStarted        \n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        resetTournament: () => dispatch(reset())\n    }\n}\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TournamentView);","import GameSetup from '../gameSetup/GameSetup';\nimport Header from '../header/Header';\nimport HeaderStyle from '../headerStyle/HeaderStyle';\nimport TournamentView from '../tournamentView/';\n\n\n\n\n\nfunction App({ tournamentStarted }) {\n  return (\n      <>\n      <HeaderStyle />\n      <div className=\"container\">\n        <Header />\n        {!tournamentStarted ? <GameSetup /> : <TournamentView />}\n      \n\n \n      </div>\n      </>\n  );\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App'\n\n\nconst mapStateToProps = (state) => {\n    return {\n        tournamentStarted: state.tournamentStarted      \n    }\n}\n\n\n\n\n\nexport default connect(mapStateToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initial = {\n    tournamentStarted: false,\n    players: [],\n    matches: [],\n    winners: [],\n    round: 0,\n    totalRounds: 0,\n    champion: \"\",\n}\n\nexport default initial;","\nimport initial from './Initial';\n\nconst newPlayer = (state, {data}) => {\n    return {\n        ...state,\n        players: [...state.players, data]\n    }\n}\n\n// Logic for starting the tournament\n\n// Durstenfeld Array Shuffle\nconst shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n}\n\nconst startTournament = (state) => {\n    return {\n        ...state,\n        players: shuffle(state.players),\n        tournamentStarted: true,\n    }\n}\n\n// Creating all the matches\n\nconst createAllMatches = (state) => {\n    let generatedMatches = [];\n    let totalRounds = Math.log2(state.players.length);\n    let totalmatches = state.players.length / 2;\n    let allocated = 0;\n    \n    for (let i = 1; i <= totalmatches; i += 1) {\n        generatedMatches.push ({\n            matchID: i - 1,\n            player1: state.players[allocated],\n            player2: state.players[allocated + 1],\n            winner: \"\", \n        })\n        allocated += 2;\n    }\n    \n    return {\n        ...state,\n        matches: generatedMatches,\n        totalRounds: totalRounds,\n    }\n}\n\n// Adding game winners to the array\nconst gameWinner = (state, action) => {\n    \n    return {\n        ...state,\n        winners: [...state.winners, action.winner]\n    }\n\n}\n\nconst makeNewRound = (state) => {\n\n    let sortedArray = state.winners.sort((a, b) => a.id - b.id).map(winner => winner.winner)\n    \n    return {\n        ...state,\n        players: sortedArray,\n        winners: [],\n    }    \n}\n\nconst crownChampion = (state, action) => {\n    return {\n        ...state,\n        champion: action.winner\n    }\n}\n\n\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case \"ADDPLAYER\": return newPlayer(state, action);\n        case \"STARTTOURNAMENT\": return createAllMatches(startTournament(state, action));\n        case \"ADDWINNER\": return gameWinner(state, action);\n        case \"NEWROUND\": return createAllMatches(makeNewRound(state, action));\n        case \"SETCHAMPION\": return crownChampion(state, action);\n        case \"RESET\": return initial;\n        default: return initial;\n    }\n}\n\nexport default reducer;","import initial from './Initial';\nimport reducer from './Reducer';\nimport { createStore } from \"redux\";\n\n\nconst store = createStore(\n    reducer,\n    initial,\n    window.__REDUX_DEVTOOLS_EXTENSION__\n    && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    );\n\n    export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './components/app/';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './data/Store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}